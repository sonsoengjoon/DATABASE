두개 이상 테이블에서 SQL 질의
: 박지성 고객이 주문한 도서의 총구매액을 알고 싶으면 어떻게 해야 할까? 총구매액은 saleprice 값을 합치면 되지만 문제가 있다. 구매액 saleprice는 Orders 테이블에 있고 고객의 이름은 Customer 테이블에 있다. Orders 테이블에는 고객의 이름 ‘박지성’이 없는 것이다. 그렇다면 어떻게 총구매액을 계산할 수 있을까?

앞에서는 하나의 테이블을 이용한 SQL 질의를 배웠다. 이제부터는 두개 이상의 테이블을 이용한 SQL 질의에 대해 알아본다. SQL은 여러 개의 테이블을 이용하여 질의하는 두 가지 방법을 제공한다. 조인(JOIN)과 부속질의(SUBQUERY)이다. 두 가지 모두 여러 개의 테이블을 동시에 다루지만 방법은 약간 다르다.

Customer와 Orders 테이블의 합체 결과 투플의 개수는 고객이 5명이고 주문이 10건이므로 
(5x10) 50 이다. Customer 테이블의 1번 고객 박지성은 Orders 테이블의 열 개 행 모두에 대해 
결합하고, 나머지 고객도 각각 Orders 테이블의 열 개 행 모두에 대해 결합한다.(이처럼 조건이 없는 테이블 간의 조인을 카티션 프로덕트라고 한다.) 그렇지만 결과는 논리에 맞지 않는다. 
박지성의 custid가 1이므로 Orders 테이블에서 custid가 1인 것만 선택하면 된다. 
이것은 SQL문의 WHERE 절에 두 테이블의 연결 조건을 추가함으로써 쉽게 해결할 수 있다.

1. 조인
문제1: 고객과 고객의 주문에 관한 데이터를 모두 보이시오.
SELECT *
FROM Customer, Orders
WHERE Customer.custid = Orders.custid;
ORDER BY Customer.custid;        //위 결과를 고객별로 보기 위해 ORDER BY로 정렬

여러 개의 테이블을 연결하여 하나의 테이블을 만드는 과정을 조인이라고 한다. 특히 앞의 SQL 문처럼 동등조건에 의하여 테이블을 조인하는 것을 동등조인이라고 한다. 조인이라고 하면 대부분 동등조인을 말한다. 
조인을 사용하면 두 개 이상의 테이블에서 일부 데이터만 얻을 수 있다. 예를 들어 고객의 이름과 고객이 주문한 도서의 가격을 알고 싶다면 다음과 같이 SQL문을 작성한다.
문제2: 고객의 이름과 고객이 주문한 도서의 판매가격을 검색하시오.
SELECT name, saleprice
FROM Customer, Orders
WHERE Customer.custid = Orders.custid

문제3: 고객별로 주문한 모든 도서의 총판매액을 구하고, 고객별로 정렬하시오. 
SELECT name, SUM(saleprice)
FROM Customer, Orders
WHERE Customer.custid = Orders.custid
GROUP BY Customer.name  //3개의 박지성이 하나로 합쳐져서 판매총액을 구함.
ORDER BY Customer.name; 

세 개 이상의 테이블을 조인할 수도 있다. 예를 들어 각 고객의 이름과 고객이 주문한 도서의 이름을 구하고 싶다고 하자. 결과를 얻으려면 세 개의 테이블을 한꺼번에 조인해야 한다. 
고객의 이름은 Customer 테이블에 있고, 고객의 주문 내역은 Orders 테이블에 있으며, 도서의 이름은 Book 테이블에 있기 때문이다. Customer 테이블과 Orders 테이블은 Customer의 기본키인 custid와 Orders의 외래키인 custid로 연결한다. 또 Orders 테이블과 Book 테이블은 Orders의 외래키인 bookid인 Book의 기본키인 bookid로 연결한다.

문제4: 고객의 이름과 고객이 주문한 도서의 이름을 구하시오.
SELECT Customer.name, book.bookname
FROM Customer, Orders, Book
WHERE Customer.custid = Orders.custid AND Orders.bookid = Book.bookid;


문제5: 가격 20,000원인 도서를 주문한 고객의 이름과 도서의 이름을 구하시오.
SELECT Customer.name , Book.bookname
FROM Customer, Orders, Book
WHERECustomer.custid=Orders.custidANDOrders.bookid=Book.bookidANDBook.price=20000;

조인 연산의 특별한 경우로 외부조인outer join이 있다. 고객의 이름과 고객의 주문한 도서의 가격을 구하는 동등조인의 예에서 도서를 주문하지 않은 고객 ‘박세리’는 결과에 포함되지 않는다. 만약 도서의 가격을 구하려면 어떻게 해야 할까? 방법은 외부조인을 사용하는 것이다.
문제6: 도서를 구매하지 않은 고객을 포함하여 고객의 이름과 고객이 주문한 도서의 판매가격을 구하시오.
SELECT Customer.name, saleprice
FROM Cutomer LEFT OUTER JOIN Orders
	ON Customer.custid = Orders.cutid;












